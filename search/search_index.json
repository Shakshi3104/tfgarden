{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"tfgarden Welcome! This is the documentation of tfgarden, last updated August 4, 2021. The TensorFlow model Garden for Human Activity Recognition ( tfgarden ) is the repository of CNN models implemented for sensor-based human activity recognition, like tensorflow.keras.applications . Usage Installation Describes how to install tfgarden Quickstart Show simple example Reference Show the reference of the implemented models","title":"Home"},{"location":"#tfgarden","text":"Welcome! This is the documentation of tfgarden, last updated August 4, 2021. The TensorFlow model Garden for Human Activity Recognition ( tfgarden ) is the repository of CNN models implemented for sensor-based human activity recognition, like tensorflow.keras.applications .","title":"tfgarden"},{"location":"#usage","text":"","title":"Usage"},{"location":"#installation","text":"Describes how to install tfgarden","title":"Installation"},{"location":"#quickstart","text":"Show simple example","title":"Quickstart"},{"location":"#reference","text":"Show the reference of the implemented models","title":"Reference"},{"location":"install/","text":"Installation This page describes how to install the tfgarden. Note Support for TensorFlow 2.0 and newer Install with Pip Use the following command to install tfgarden: 1 pip install git+https://github.com/Shakshi3104/tfgarden.git","title":"Installation"},{"location":"install/#installation","text":"This page describes how to install the tfgarden. Note Support for TensorFlow 2.0 and newer","title":"Installation"},{"location":"install/#install-with-pip","text":"Use the following command to install tfgarden: 1 pip install git+https://github.com/Shakshi3104/tfgarden.git","title":"Install with Pip"},{"location":"quickstart/","text":"Quickstart Example This example demonstrates how to use an implemented model for human activity recognition. Load the model Load the MobileNetV2 model, like a tensorflow.keras.applications API: 1 2 3 4 5 6 7 8 import tfgarden model = tfgarden . applications . MobileNetV2 ( include_top = True , weights = None , input_shape = ( 256 , 3 ), classes = 6 ) Train the model Train the loaded model as you normally train a keras model : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # compile the model # before the model is ready for training, # it needs a few more settings model . compile ( optimizer = 'adam' , loss = 'categorical_crossentropy' , metrics = [ 'accuracy' ] ) # Train the model stack = model . fit ( train_ds , epochs = 100 , validation_data = valid_ds )","title":"Quickstart"},{"location":"quickstart/#quickstart-example","text":"This example demonstrates how to use an implemented model for human activity recognition.","title":"Quickstart Example"},{"location":"quickstart/#load-the-model","text":"Load the MobileNetV2 model, like a tensorflow.keras.applications API: 1 2 3 4 5 6 7 8 import tfgarden model = tfgarden . applications . MobileNetV2 ( include_top = True , weights = None , input_shape = ( 256 , 3 ), classes = 6 )","title":"Load the model"},{"location":"quickstart/#train-the-model","text":"Train the loaded model as you normally train a keras model : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # compile the model # before the model is ready for training, # it needs a few more settings model . compile ( optimizer = 'adam' , loss = 'categorical_crossentropy' , metrics = [ 'accuracy' ] ) # Train the model stack = model . fit ( train_ds , epochs = 100 , validation_data = valid_ds )","title":"Train the model"},{"location":"reference/","text":"Module: tfgarden.applications Modules densenet module: DenseNet models for Keras. efficientnet module : EfficientNet models for Keras. inception_resnet_v2 module: Inception-ResNet V2 model for Keras. inception_v3 module: Inception V3 model for Keras. mobilenet module : MobileNet v1 models for Keras. mobilenet_v2 module: MobileNet v2 models for Keras. mobilenet_v3 module: MobileNet v3 models for Keras. nasnet module: NASNet-A models for Keras. resnet module : ResNet models for Keras. resnet_v2 module: ResNet v2 models for Keras, Not implemented yet . vgg11 module : VGG11 model for Keras. vgg13 module : VGG13 model for Keras. vgg16 module : VGG16 model for Keras. vgg19 module : VGG19 model for Keras. xception module: Xception V1 model for Keras. mnasnet module: MnasNet-A1 model for Keras. pyramidnet module : PyramidNet models for Keras. efficientnet_lite module : EfficientNet-Lite models for Keras. Functions DenseNet121(...) : Instantiates the Densenet121 architecture. DenseNet169(...) : Instantiates the Densenet169 architecture. DenseNet201(...) : Instantiates the Densenet201 architecture. EfficientNetB0(...) : Instantiates the EfficientNetB0 architecture. EfficientNetB1(...) : Instantiates the EfficientNetB1 architecture. EfficientNetB2(...) : Instantiates the EfficientNetB2 architecture. EfficientNetB3(...) : Instantiates the EfficientNetB3 architecture. EfficientNetB4(...) : Instantiates the EfficientNetB4 architecture. EfficientNetB5(...) : Instantiates the EfficientNetB5 architecture. EfficientNetB6(...) : Instantiates the EfficientNetB6 architecture. EfficientNetB7(...) : Instantiates the EfficientNetB7 architecture. InceptionResNetV2(...) : Instantiates the Inception-ResNet v2 architecture. InceptionV3(...) : Instantiates the Inception v3 architecture. MobileNet(...) : Instantiates the MobileNet architecture. MobileNetV2(...) : Instantiates the MobileNetV2 architecture. MobileNetV3Large(...) : Instantiates the MobileNetV3Large architecture. MobileNetV3Small(...) : Instantiates the MobileNetV3Small architecture. NASNetLarge(...) : Instantiates a NASNet model in ImageNet mode for HASC. NASNetMobile(...) : Instantiates a Mobile NASNet model in ImageNet mode for HASC. ResNet18(...) : Instantiates the ResNet18 architecture. ResNet16(...) : Instantiates the ResNet16 architecture (half size of ResNet34). ResNet34(...) : Instantiates the ResNet34 architecture. VGG11(...) : Instantiates the VGG11 architecture. VGG13(...) : Instantiates the VGG13 architecture. VGG16(...) : Instantiates the VGG16 architecture. VGG19(...) : Instantiates the VGG19 architecture. Xception(...) : Instantiates the Xception architecture. MnasNet(...) : Instantiates the MnasNet-A1 model. PyramidNet18(...) : Instantiates the PyramidNet18 architecture. PyramidNet34(...) : Instantiates the PyramidNet34 architecture. PyramidNet50(...) : Instantiates the PyramidNet50 architecture. PyramidNet101(...) : Instantiates the PyramidNet101 architecture. PyramidNet152(...) : Instantiates the PyramidNet152 architecture. EfficientNet_lite0(...) : Instantiates the EfficientNet-lite0 architecture. EfficientNet_lite1(...) : Instantiates the EfficientNet-lite1 architecture. EfficientNet_lite2(...) : Instantiates the EfficientNet-lite2 architecture. EfficientNet_lite3(...) : Instantiates the EfficientNet-lite3 architecture. EfficientNet_lite4(...) : Instantiates the EfficientNet-lite4 architecture. Performance Shows the performance of the models at the HASC.","title":"Reference"},{"location":"reference/#module-tfgardenapplications","text":"","title":"Module: tfgarden.applications"},{"location":"reference/#modules","text":"densenet module: DenseNet models for Keras. efficientnet module : EfficientNet models for Keras. inception_resnet_v2 module: Inception-ResNet V2 model for Keras. inception_v3 module: Inception V3 model for Keras. mobilenet module : MobileNet v1 models for Keras. mobilenet_v2 module: MobileNet v2 models for Keras. mobilenet_v3 module: MobileNet v3 models for Keras. nasnet module: NASNet-A models for Keras. resnet module : ResNet models for Keras. resnet_v2 module: ResNet v2 models for Keras, Not implemented yet . vgg11 module : VGG11 model for Keras. vgg13 module : VGG13 model for Keras. vgg16 module : VGG16 model for Keras. vgg19 module : VGG19 model for Keras. xception module: Xception V1 model for Keras. mnasnet module: MnasNet-A1 model for Keras. pyramidnet module : PyramidNet models for Keras. efficientnet_lite module : EfficientNet-Lite models for Keras.","title":"Modules"},{"location":"reference/#functions","text":"DenseNet121(...) : Instantiates the Densenet121 architecture. DenseNet169(...) : Instantiates the Densenet169 architecture. DenseNet201(...) : Instantiates the Densenet201 architecture. EfficientNetB0(...) : Instantiates the EfficientNetB0 architecture. EfficientNetB1(...) : Instantiates the EfficientNetB1 architecture. EfficientNetB2(...) : Instantiates the EfficientNetB2 architecture. EfficientNetB3(...) : Instantiates the EfficientNetB3 architecture. EfficientNetB4(...) : Instantiates the EfficientNetB4 architecture. EfficientNetB5(...) : Instantiates the EfficientNetB5 architecture. EfficientNetB6(...) : Instantiates the EfficientNetB6 architecture. EfficientNetB7(...) : Instantiates the EfficientNetB7 architecture. InceptionResNetV2(...) : Instantiates the Inception-ResNet v2 architecture. InceptionV3(...) : Instantiates the Inception v3 architecture. MobileNet(...) : Instantiates the MobileNet architecture. MobileNetV2(...) : Instantiates the MobileNetV2 architecture. MobileNetV3Large(...) : Instantiates the MobileNetV3Large architecture. MobileNetV3Small(...) : Instantiates the MobileNetV3Small architecture. NASNetLarge(...) : Instantiates a NASNet model in ImageNet mode for HASC. NASNetMobile(...) : Instantiates a Mobile NASNet model in ImageNet mode for HASC. ResNet18(...) : Instantiates the ResNet18 architecture. ResNet16(...) : Instantiates the ResNet16 architecture (half size of ResNet34). ResNet34(...) : Instantiates the ResNet34 architecture. VGG11(...) : Instantiates the VGG11 architecture. VGG13(...) : Instantiates the VGG13 architecture. VGG16(...) : Instantiates the VGG16 architecture. VGG19(...) : Instantiates the VGG19 architecture. Xception(...) : Instantiates the Xception architecture. MnasNet(...) : Instantiates the MnasNet-A1 model. PyramidNet18(...) : Instantiates the PyramidNet18 architecture. PyramidNet34(...) : Instantiates the PyramidNet34 architecture. PyramidNet50(...) : Instantiates the PyramidNet50 architecture. PyramidNet101(...) : Instantiates the PyramidNet101 architecture. PyramidNet152(...) : Instantiates the PyramidNet152 architecture. EfficientNet_lite0(...) : Instantiates the EfficientNet-lite0 architecture. EfficientNet_lite1(...) : Instantiates the EfficientNet-lite1 architecture. EfficientNet_lite2(...) : Instantiates the EfficientNet-lite2 architecture. EfficientNet_lite3(...) : Instantiates the EfficientNet-lite3 architecture. EfficientNet_lite4(...) : Instantiates the EfficientNet-lite4 architecture.","title":"Functions"},{"location":"reference/#performance","text":"Shows the performance of the models at the HASC.","title":"Performance"},{"location":"reference/densenet/","text":"DenseNet applications.densenet.DenseNet121 1 2 3 applications . densenet . DenseNet121 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Densely Connected Convolutional Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (random initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.densenet.DenseNet169 1 2 3 applications . densenet . DenseNet169 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Densely Connected Convolutional Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (random initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.densenet.DenseNet201 1 2 3 applications . densenet . DenseNet201 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Densely Connected Convolutional Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (random initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance.","title":"DenseNet"},{"location":"reference/densenet/#densenet","text":"","title":"DenseNet"},{"location":"reference/densenet/#applicationsdensenetdensenet121","text":"1 2 3 applications . densenet . DenseNet121 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Densely Connected Convolutional Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.densenet.DenseNet121"},{"location":"reference/densenet/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (random initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/densenet/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/densenet/#applicationsdensenetdensenet169","text":"1 2 3 applications . densenet . DenseNet169 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Densely Connected Convolutional Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.densenet.DenseNet169"},{"location":"reference/densenet/#arguments_1","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (random initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/densenet/#returns_1","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/densenet/#applicationsdensenetdensenet201","text":"1 2 3 applications . densenet . DenseNet201 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Densely Connected Convolutional Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.densenet.DenseNet201"},{"location":"reference/densenet/#arguments_2","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (random initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/densenet/#returns_2","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet/","text":"EfficientNet applications.efficientnet.EfficientNetB0 1 applications . efficientnet . EfficientNetB0 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.efficientnet.EfficientNetB1 1 applications . efficientnet . EfficientNetB1 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.efficientnet.EfficientNetB2 1 applications . efficientnet . EfficientNetB2 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.efficientnet.EfficientNetB3 1 applications . efficientnet . EfficientNetB3 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.efficientnet.EfficientNetB4 1 applications . efficientnet . EfficientNetB4 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.efficientnet.EfficientNetB5 1 applications . efficientnet . EfficientNetB5 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.efficientnet.EfficientNetB6 1 applications . efficientnet . EfficientNetB6 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.efficientnet.EfficientNetB7 1 applications . efficientnet . EfficientNetB7 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance.","title":"EfficientNet"},{"location":"reference/efficientnet/#efficientnet","text":"","title":"EfficientNet"},{"location":"reference/efficientnet/#applicationsefficientnetefficientnetb0","text":"1 applications . efficientnet . EfficientNetB0 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet.EfficientNetB0"},{"location":"reference/efficientnet/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet/#applicationsefficientnetefficientnetb1","text":"1 applications . efficientnet . EfficientNetB1 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet.EfficientNetB1"},{"location":"reference/efficientnet/#arguments_1","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet/#returns_1","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet/#applicationsefficientnetefficientnetb2","text":"1 applications . efficientnet . EfficientNetB2 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet.EfficientNetB2"},{"location":"reference/efficientnet/#arguments_2","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet/#returns_2","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet/#applicationsefficientnetefficientnetb3","text":"1 applications . efficientnet . EfficientNetB3 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet.EfficientNetB3"},{"location":"reference/efficientnet/#arguments_3","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet/#returns_3","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet/#applicationsefficientnetefficientnetb4","text":"1 applications . efficientnet . EfficientNetB4 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet.EfficientNetB4"},{"location":"reference/efficientnet/#arguments_4","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet/#returns_4","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet/#applicationsefficientnetefficientnetb5","text":"1 applications . efficientnet . EfficientNetB5 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet.EfficientNetB5"},{"location":"reference/efficientnet/#arguments_5","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet/#returns_5","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet/#applicationsefficientnetefficientnetb6","text":"1 applications . efficientnet . EfficientNetB6 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet.EfficientNetB6"},{"location":"reference/efficientnet/#arguments_6","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet/#returns_6","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet/#applicationsefficientnetefficientnetb7","text":"1 applications . efficientnet . EfficientNetB7 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet.EfficientNetB7"},{"location":"reference/efficientnet/#arguments_7","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output od the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet/#returns_7","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet_lite/","text":"EfficientNet-Lite EfficientNet-Lite is designed for performance on mobile CPU, GPU and EdgeTPU. Differences from EfficientNet: - Removed squeeze-and-excitation networks More information on the original EfficientNet-Lite can be found here . applications.efficientnet_lite.EfficientNet_lite0 1 applications . efficientnet_lite . EfficientNet_lite0 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.efficientnet_lite.EfficientNet_lite1 1 applications . efficientnet_lite . EfficientNet_lite1 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.efficientnet_lite.EfficientNet_lite2 1 applications . efficientnet_lite . EfficientNet_lite2 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.efficientnet_lite.EfficientNet_lite3 1 applications . efficientnet_lite . EfficientNet_lite3 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.efficientnet_lite.EfficientNet_lite4 1 applications . efficientnet_lite . EfficientNet_lite4 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance.","title":"EfficientNet-Lite"},{"location":"reference/efficientnet_lite/#efficientnet-lite","text":"EfficientNet-Lite is designed for performance on mobile CPU, GPU and EdgeTPU. Differences from EfficientNet: - Removed squeeze-and-excitation networks More information on the original EfficientNet-Lite can be found here .","title":"EfficientNet-Lite"},{"location":"reference/efficientnet_lite/#applicationsefficientnet_liteefficientnet_lite0","text":"1 applications . efficientnet_lite . EfficientNet_lite0 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet_lite.EfficientNet_lite0"},{"location":"reference/efficientnet_lite/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet_lite/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet_lite/#applicationsefficientnet_liteefficientnet_lite1","text":"1 applications . efficientnet_lite . EfficientNet_lite1 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet_lite.EfficientNet_lite1"},{"location":"reference/efficientnet_lite/#arguments_1","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet_lite/#returns_1","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet_lite/#applicationsefficientnet_liteefficientnet_lite2","text":"1 applications . efficientnet_lite . EfficientNet_lite2 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet_lite.EfficientNet_lite2"},{"location":"reference/efficientnet_lite/#arguments_2","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet_lite/#returns_2","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet_lite/#applicationsefficientnet_liteefficientnet_lite3","text":"1 applications . efficientnet_lite . EfficientNet_lite3 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet_lite.EfficientNet_lite3"},{"location":"reference/efficientnet_lite/#arguments_3","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet_lite/#returns_3","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/efficientnet_lite/#applicationsefficientnet_liteefficientnet_lite4","text":"1 applications . efficientnet_lite . EfficientNet_lite4 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks (ICML 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.efficientnet_lite.EfficientNet_lite4"},{"location":"reference/efficientnet_lite/#arguments_4","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/efficientnet_lite/#returns_4","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/inception_resnet_v2/","text":"Inception-ResNet v2 applications.inception_resnet_v2.InceptionResNetV2 1 2 3 4 applications . inception_resnet_v2 . InceptionResNetV2 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning (AAAI 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance.","title":"Inception-ResNet v2"},{"location":"reference/inception_resnet_v2/#inception-resnet-v2","text":"","title":"Inception-ResNet v2"},{"location":"reference/inception_resnet_v2/#applicationsinception_resnet_v2inceptionresnetv2","text":"1 2 3 4 applications . inception_resnet_v2 . InceptionResNetV2 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning (AAAI 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.inception_resnet_v2.InceptionResNetV2"},{"location":"reference/inception_resnet_v2/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/inception_resnet_v2/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/inception_v3/","text":"Inception v3 applications.inception_v3.InceptionV3 1 2 3 4 applications . inception_v3 . InceptionV3 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Rethinking the Inception Architecture for Computer Vision (CVPR 2016) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance.","title":"Inception v3"},{"location":"reference/inception_v3/#inception-v3","text":"","title":"Inception v3"},{"location":"reference/inception_v3/#applicationsinception_v3inceptionv3","text":"1 2 3 4 applications . inception_v3 . InceptionV3 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Rethinking the Inception Architecture for Computer Vision (CVPR 2016) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.inception_v3.InceptionV3"},{"location":"reference/inception_v3/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/inception_v3/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/mnasnet/","text":"MnasNet applications.mnasnet.MnasNet 1 2 3 4 applications . mnasnet . MnasNet ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 1.0 , depth_multiplier = 1 ) Reference: - MnasNet: Platform-Aware Neural Architecture Search for Mobile (CVPR 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : Controls the width of the network. Default to 1.0. depth_multipliter : Depth multiplier for depthwise convolution. Default to 1.0. Returns tensorflow.keras.Model instance.","title":"MnasNet"},{"location":"reference/mnasnet/#mnasnet","text":"","title":"MnasNet"},{"location":"reference/mnasnet/#applicationsmnasnetmnasnet","text":"1 2 3 4 applications . mnasnet . MnasNet ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 1.0 , depth_multiplier = 1 ) Reference: - MnasNet: Platform-Aware Neural Architecture Search for Mobile (CVPR 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.mnasnet.MnasNet"},{"location":"reference/mnasnet/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : Controls the width of the network. Default to 1.0. depth_multipliter : Depth multiplier for depthwise convolution. Default to 1.0.","title":"Arguments"},{"location":"reference/mnasnet/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/mobilenet/","text":"MobileNet application.mobilenet.MobileNet 1 2 MobileNet ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 1.0 , depth_multiplier = 1 , dropout = 1e-3 ) Reference: - MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : Controls the width of the network. This is known as the width multiplier in the MobileNet paper. Default to 1.0. depth_multipliter : Depth multiplier for depthwise convolution. This is called the resolution multiplier in the MobileNet paper. Default to 1.0. dropout : Dropout rate. Default to 0.001. Returns tensorflow.keras.Model instance.","title":"MobileNet"},{"location":"reference/mobilenet/#mobilenet","text":"","title":"MobileNet"},{"location":"reference/mobilenet/#applicationmobilenetmobilenet","text":"1 2 MobileNet ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 1.0 , depth_multiplier = 1 , dropout = 1e-3 ) Reference: - MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"application.mobilenet.MobileNet"},{"location":"reference/mobilenet/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : Controls the width of the network. This is known as the width multiplier in the MobileNet paper. Default to 1.0. depth_multipliter : Depth multiplier for depthwise convolution. This is called the resolution multiplier in the MobileNet paper. Default to 1.0. dropout : Dropout rate. Default to 0.001.","title":"Arguments"},{"location":"reference/mobilenet/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/mobilenet_v2/","text":"MobileNet v2 application.mobilenet_v2.MobileNetV2 1 2 MobileNetV2 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 1.0 ) Reference: - MobileNetV2: Inverted Residuals and Linear Bottlenecks (CVPR 2018) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : Float between 0 and 1. controls the width of the network. This is known as the width multiplier in the MobileNetV2 paper. Returns tensorflow.keras.Model instance.","title":"MobileNet v2"},{"location":"reference/mobilenet_v2/#mobilenet-v2","text":"","title":"MobileNet v2"},{"location":"reference/mobilenet_v2/#applicationmobilenet_v2mobilenetv2","text":"1 2 MobileNetV2 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 1.0 ) Reference: - MobileNetV2: Inverted Residuals and Linear Bottlenecks (CVPR 2018) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"application.mobilenet_v2.MobileNetV2"},{"location":"reference/mobilenet_v2/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : Float between 0 and 1. controls the width of the network. This is known as the width multiplier in the MobileNetV2 paper.","title":"Arguments"},{"location":"reference/mobilenet_v2/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/mobilenet_v3/","text":"MobileNet v3 applications.mobilenet_v3.MobileNetV3Small 1 2 3 4 applications . mobilenet_v3 . MobileNetV3Small ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 1.0 , minimalistic = False ) Reference: - Searching for MobileNetV3 (ICCV 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : Float between 0 and 1. controls the width of the network. This is known as the width multiplier in the MobileNetV3 paper. minimalistic: Bool. In addition to large and small models this module also contains so-called minimalistic models, these models have the same per-layer dimensions characteristic as MobilenetV3 however, they don't utilize any of the advanced blocks (squeeze-and-excite units, hard-swish, and 5x5 convolutions). While these models are less efficient on CPU, they are much more performant on GPU/DSP. Returns tensorflow.keras.Model instance. applications.mobilenet_v3.MobileNetV3Large 1 2 3 4 applications . mobilenet_v3 . MobileNetV3Large ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 1.0 , minimalistic = False ) Reference: - Searching for MobileNetV3 (ICCV 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : Float between 0 and 1. controls the width of the network. This is known as the width multiplier in the MobileNetV3 paper. minimalistic: Bool. In addition to large and small models this module also contains so-called minimalistic models, these models have the same per-layer dimensions characteristic as MobilenetV3 however, they don't utilize any of the advanced blocks (squeeze-and-excite units, hard-swish, and 5x5 convolutions). While these models are less efficient on CPU, they are much more performant on GPU/DSP. Returns tensorflow.keras.Model instance.","title":"MobileNet v3"},{"location":"reference/mobilenet_v3/#mobilenet-v3","text":"","title":"MobileNet v3"},{"location":"reference/mobilenet_v3/#applicationsmobilenet_v3mobilenetv3small","text":"1 2 3 4 applications . mobilenet_v3 . MobileNetV3Small ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 1.0 , minimalistic = False ) Reference: - Searching for MobileNetV3 (ICCV 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.mobilenet_v3.MobileNetV3Small"},{"location":"reference/mobilenet_v3/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : Float between 0 and 1. controls the width of the network. This is known as the width multiplier in the MobileNetV3 paper. minimalistic: Bool. In addition to large and small models this module also contains so-called minimalistic models, these models have the same per-layer dimensions characteristic as MobilenetV3 however, they don't utilize any of the advanced blocks (squeeze-and-excite units, hard-swish, and 5x5 convolutions). While these models are less efficient on CPU, they are much more performant on GPU/DSP.","title":"Arguments"},{"location":"reference/mobilenet_v3/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/mobilenet_v3/#applicationsmobilenet_v3mobilenetv3large","text":"1 2 3 4 applications . mobilenet_v3 . MobileNetV3Large ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 1.0 , minimalistic = False ) Reference: - Searching for MobileNetV3 (ICCV 2019) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.mobilenet_v3.MobileNetV3Large"},{"location":"reference/mobilenet_v3/#arguments_1","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : Float between 0 and 1. controls the width of the network. This is known as the width multiplier in the MobileNetV3 paper. minimalistic: Bool. In addition to large and small models this module also contains so-called minimalistic models, these models have the same per-layer dimensions characteristic as MobilenetV3 however, they don't utilize any of the advanced blocks (squeeze-and-excite units, hard-swish, and 5x5 convolutions). While these models are less efficient on CPU, they are much more performant on GPU/DSP.","title":"Arguments"},{"location":"reference/mobilenet_v3/#returns_1","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/nasnet/","text":"NASNet applications.nasnet.NASNetLarge 1 2 3 4 applications . nasnet . NASNetLarge ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Learning Transferable Architectures for Scalable Image Recognition (CVPR 2018) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.nasnet.NASNetMobile 1 2 3 4 applications . nasnet . NASNetMobile ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Learning Transferable Architectures for Scalable Image Recognition (CVPR 2018) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance.","title":"NASNet"},{"location":"reference/nasnet/#nasnet","text":"","title":"NASNet"},{"location":"reference/nasnet/#applicationsnasnetnasnetlarge","text":"1 2 3 4 applications . nasnet . NASNetLarge ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Learning Transferable Architectures for Scalable Image Recognition (CVPR 2018) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.nasnet.NASNetLarge"},{"location":"reference/nasnet/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/nasnet/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/nasnet/#applicationsnasnetnasnetmobile","text":"1 2 3 4 applications . nasnet . NASNetMobile ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Learning Transferable Architectures for Scalable Image Recognition (CVPR 2018) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.nasnet.NASNetMobile"},{"location":"reference/nasnet/#arguments_1","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/nasnet/#returns_1","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/pyramidnet/","text":"PyramidNet applications.pyramidnet.PyramidNet18 1 applications . pyramidnet . PyramidNet18 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 48 ) Reference paper: - Deep Pyramidal Residual Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : paramter for PyramidNet Returns tensorflow.keras.Model instance. applications.pyramidnet.PyramidNet34 1 applications . pyramidnet . PyramidNet34 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 48 ) Reference paper: - Deep Pyramidal Residual Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : paramter for PyramidNet Returns tensorflow.keras.Model instance. applications.pyramidnet.PyramidNet50 1 applications . pyramidnet . PyramidNet50 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 48 ) Reference paper: - Deep Pyramidal Residual Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : paramter for PyramidNet Returns tensorflow.keras.Model instance. applications.pyramidnet.PyramidNet101 1 applications . pyramidnet . PyramidNet101 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 48 ) Reference paper: - Deep Pyramidal Residual Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : paramter for PyramidNet Returns tensorflow.keras.Model instance. applications.pyramidnet.PyramidNet152 1 applications . pyramidnet . PyramidNet152 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 48 ) Reference paper: - Deep Pyramidal Residual Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : paramter for PyramidNet Returns tensorflow.keras.Model instance.","title":"PyramidNet"},{"location":"reference/pyramidnet/#pyramidnet","text":"","title":"PyramidNet"},{"location":"reference/pyramidnet/#applicationspyramidnetpyramidnet18","text":"1 applications . pyramidnet . PyramidNet18 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 48 ) Reference paper: - Deep Pyramidal Residual Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.pyramidnet.PyramidNet18"},{"location":"reference/pyramidnet/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : paramter for PyramidNet","title":"Arguments"},{"location":"reference/pyramidnet/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/pyramidnet/#applicationspyramidnetpyramidnet34","text":"1 applications . pyramidnet . PyramidNet34 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 48 ) Reference paper: - Deep Pyramidal Residual Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.pyramidnet.PyramidNet34"},{"location":"reference/pyramidnet/#arguments_1","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : paramter for PyramidNet","title":"Arguments"},{"location":"reference/pyramidnet/#returns_1","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/pyramidnet/#applicationspyramidnetpyramidnet50","text":"1 applications . pyramidnet . PyramidNet50 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 48 ) Reference paper: - Deep Pyramidal Residual Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.pyramidnet.PyramidNet50"},{"location":"reference/pyramidnet/#arguments_2","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : paramter for PyramidNet","title":"Arguments"},{"location":"reference/pyramidnet/#returns_2","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/pyramidnet/#applicationspyramidnetpyramidnet101","text":"1 applications . pyramidnet . PyramidNet101 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 48 ) Reference paper: - Deep Pyramidal Residual Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.pyramidnet.PyramidNet101"},{"location":"reference/pyramidnet/#arguments_3","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : paramter for PyramidNet","title":"Arguments"},{"location":"reference/pyramidnet/#returns_3","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/pyramidnet/#applicationspyramidnetpyramidnet152","text":"1 applications . pyramidnet . PyramidNet152 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' , alpha = 48 ) Reference paper: - Deep Pyramidal Residual Networks (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.pyramidnet.PyramidNet152"},{"location":"reference/pyramidnet/#arguments_4","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . alpha : paramter for PyramidNet","title":"Arguments"},{"location":"reference/pyramidnet/#returns_4","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/resnet/","text":"ResNet applications.resnet.ResNet16 1 applications . resnet . ResNet16 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Note: ResNet16 is a half size of ResNet34 for HASC designed by Hasegawa et, al. Reference paper: - Representation learning by convolutional neural network in activity recognition on smartphone sensing (CIIS 2019) - Deep Residual Learning for Image Recognition (CVPR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.resnet.ResNet18 1 applications . resnet . ResNet18 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - Deep Residual Learning for Image Recognition (CVPR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.resnet.ResNet34 1 applications . resnet . ResNet34 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - Deep Residual Learning for Image Recognition (CVPR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance.","title":"ResNet"},{"location":"reference/resnet/#resnet","text":"","title":"ResNet"},{"location":"reference/resnet/#applicationsresnetresnet16","text":"1 applications . resnet . ResNet16 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Note: ResNet16 is a half size of ResNet34 for HASC designed by Hasegawa et, al. Reference paper: - Representation learning by convolutional neural network in activity recognition on smartphone sensing (CIIS 2019) - Deep Residual Learning for Image Recognition (CVPR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.resnet.ResNet16"},{"location":"reference/resnet/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/resnet/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/resnet/#applicationsresnetresnet18","text":"1 applications . resnet . ResNet18 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - Deep Residual Learning for Image Recognition (CVPR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.resnet.ResNet18"},{"location":"reference/resnet/#arguments_1","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/resnet/#returns_1","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/resnet/#applicationsresnetresnet34","text":"1 applications . resnet . ResNet34 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - Deep Residual Learning for Image Recognition (CVPR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.resnet.ResNet34"},{"location":"reference/resnet/#arguments_2","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/resnet/#returns_2","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/vgg/","text":"VGG applications.vgg11.VGG11 1 applications . vgg11 . VGG11 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - Very Deep Convolutional Networks for Large-Scale Image Recognition (ICLR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the 3 fully-connected layers at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.vgg13.VGG13 1 applications . vgg13 . VGG13 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - Very Deep Convolutional Networks for Large-Scale Image Recognition (ICLR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the 3 fully-connected layers at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.vgg16.VGG16 1 applications . vgg16 . VGG16 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - Very Deep Convolutional Networks for Large-Scale Image Recognition (ICLR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the 3 fully-connected layers at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance. applications.vgg19.VGG19 1 applications . vgg19 . VGG19 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - Very Deep Convolutional Networks for Large-Scale Image Recognition (ICLR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the 3 fully-connected layers at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance.","title":"VGG"},{"location":"reference/vgg/#vgg","text":"","title":"VGG"},{"location":"reference/vgg/#applicationsvgg11vgg11","text":"1 applications . vgg11 . VGG11 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - Very Deep Convolutional Networks for Large-Scale Image Recognition (ICLR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.vgg11.VGG11"},{"location":"reference/vgg/#arguments","text":"include_top : whether to include the 3 fully-connected layers at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/vgg/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/vgg/#applicationsvgg13vgg13","text":"1 applications . vgg13 . VGG13 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - Very Deep Convolutional Networks for Large-Scale Image Recognition (ICLR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.vgg13.VGG13"},{"location":"reference/vgg/#arguments_1","text":"include_top : whether to include the 3 fully-connected layers at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/vgg/#returns_1","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/vgg/#applicationsvgg16vgg16","text":"1 applications . vgg16 . VGG16 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - Very Deep Convolutional Networks for Large-Scale Image Recognition (ICLR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.vgg16.VGG16"},{"location":"reference/vgg/#arguments_2","text":"include_top : whether to include the 3 fully-connected layers at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/vgg/#returns_2","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/vgg/#applicationsvgg19vgg19","text":"1 applications . vgg19 . VGG19 ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference paper: - Very Deep Convolutional Networks for Large-Scale Image Recognition (ICLR 2015) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.vgg19.VGG19"},{"location":"reference/vgg/#arguments_3","text":"include_top : whether to include the 3 fully-connected layers at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/vgg/#returns_3","text":"tensorflow.keras.Model instance.","title":"Returns"},{"location":"reference/xception/","text":"Xception applications.xception.Xception 1 2 3 4 pplications . xception . Xception ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Xception: Deep Learning with Depthwise Separable Convolutions (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3). Arguments include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' . Returns tensorflow.keras.Model instance.","title":"Xception"},{"location":"reference/xception/#xception","text":"","title":"Xception"},{"location":"reference/xception/#applicationsxceptionxception","text":"1 2 3 4 pplications . xception . Xception ( include_top = True , weights = 'hasc' , input_shape = None , pooling = None , classes = 6 , classifier_activation = 'softmax' ) Reference: - Xception: Deep Learning with Depthwise Separable Convolutions (CVPR 2017) By default, it loads weights pre-trained on HASC. Check 'weights' for other options. The default input size for this model is 768 (256 * 3).","title":"applications.xception.Xception"},{"location":"reference/xception/#arguments","text":"include_top : whether to include the fully-connected layer at the top of the network. weights : one of 'None' (he_normal initialization), 'hasc' (pre-training on HASC), or the path to the weights file to be loaded. input_shape : optional shape tuple, default (768, 1) (with channels_last data format). pooling : optional pooling mode for feature extraction when include_top is False. None means that the output of the model will be applied to the 3D tensor output of the last convolutional block. avg means that global average pooling will be applied to the output of the last convolutioinal block, and thus the output of the model will be a 2D tensor. max means that global max pooling will be applied. classes : optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified, default 6. classifier_activation : A str or callable. The activation function to use on the \"top\" layer. Ignored unless include_top=True . Set classifier_activation= None to return the logits of the \"top\" layer, default 'softmax' .","title":"Arguments"},{"location":"reference/xception/#returns","text":"tensorflow.keras.Model instance.","title":"Returns"}]}